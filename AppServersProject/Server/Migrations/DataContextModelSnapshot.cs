// <auto-generated />
using AppServersProject.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppServersProject.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AppServersProject.Shared.FootballPlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("FootballPlayers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Toni",
                            Position = "Midfielder",
                            Surname = "Kroos",
                            TeamId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Karim",
                            Position = "Striker",
                            Surname = "Benzema",
                            TeamId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Robert",
                            Position = "Striker",
                            Surname = "Lewandowski",
                            TeamId = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Jordi",
                            Position = "Left-back",
                            Surname = "Alves",
                            TeamId = 4
                        });
                });

            modelBuilder.Entity("AppServersProject.Shared.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Coach")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("League")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Coach = "Erik ten Hag",
                            League = "La Liga",
                            Name = "Real Madrid"
                        },
                        new
                        {
                            Id = 2,
                            Coach = "Julian Nagelsmann",
                            League = "Bundesliga",
                            Name = "Bayern Munich"
                        },
                        new
                        {
                            Id = 3,
                            Coach = "Mauricio Pochettino",
                            League = "Ligue 1",
                            Name = "Paris Saint Germain"
                        },
                        new
                        {
                            Id = 4,
                            Coach = "Xavi",
                            League = "La Liga",
                            Name = "FC Barcelona"
                        });
                });

            modelBuilder.Entity("AppServersProject.Shared.FootballPlayer", b =>
                {
                    b.HasOne("AppServersProject.Shared.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });
#pragma warning restore 612, 618
        }
    }
}
